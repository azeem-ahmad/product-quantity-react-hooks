{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","count","setCount","className","onClick","class","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAuCeA,MApCf,WAAgB,IAAD,EAEaC,mBAAS,GAFtB,mBAENC,EAFM,KAECC,EAFD,KAqBb,OACE,sBAAKC,UAAU,MAAf,UAEE,wBAAQC,QApBO,WACbH,EAAQ,GACVC,EAASD,EAAQ,IAkBjB,eAEA,sBAAME,UAAU,aAAhB,SAA8BF,IAC9B,wBAAQG,QAjBO,WACbH,EAAQ,IACVC,EAASD,EAAQ,IAejB,eACA,uBACA,wBAAQE,UAAU,QAAQC,QAAS,kBAAMF,EAAS,IAAlD,mBACA,mBAAGG,MAAM,OAAT,mDCrBSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4a4c7744.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nfunction App() {\n\n  const [count, setCount] = useState(1);\n\n  const decHandler = () => {\n    if (count > 1) {\n      setCount(count - 1);\n    }\n  }\n\n  const incHandler = () => {\n    if (count < 10) {\n      setCount(count + 1);\n    }\n  }\n\n  // const onChangehandler = (e) => {\n  //   let intCount = parseInt(e.target.value); \n  //   setCount(intCount);\n  // } \n\n  return (\n    <div className=\"App\">\n      {/* <h2>Quantity: {count}</h2> */}\n      <button onClick={decHandler}>-</button>\n      {/* <input type=\"text\" value={count} onChange={onChangehandler} /> */}\n      <span className=\"countlabel\">{count}</span>\n      <button onClick={incHandler}>+</button>\n      <br />\n      <button className=\"reset\" onClick={() => setCount(1)}>Reset</button>\n      <p class=\"note\">(Note: Not more than 10 products)</p>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}